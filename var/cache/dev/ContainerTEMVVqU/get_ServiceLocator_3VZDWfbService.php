<?php

namespace ContainerTEMVVqU;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_3VZDWfbService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.3VZDWfb' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.3VZDWfb'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'App\\Controller\\AuthorController::createAuthor' => ['privates', '.service_locator.vuDI7p1', 'get_ServiceLocator_VuDI7p1Service', true],
            'App\\Controller\\AuthorController::deleteAuthor' => ['privates', '.service_locator.u_qgCrO', 'get_ServiceLocator_UQgCrOService', true],
            'App\\Controller\\AuthorController::getAllAuthors' => ['privates', '.service_locator.fAyLWxL', 'get_ServiceLocator_FAyLWxLService', true],
            'App\\Controller\\AuthorController::getAuthorDetails' => ['privates', '.service_locator.yIFCjXg', 'get_ServiceLocator_YIFCjXgService', true],
            'App\\Controller\\AuthorController::updateAuthor' => ['privates', '.service_locator.zwFgvKV', 'get_ServiceLocator_ZwFgvKVService', true],
            'App\\Controller\\BookController::createBook' => ['privates', '.service_locator.ALWuwB6', 'get_ServiceLocator_ALWuwB6Service', true],
            'App\\Controller\\BookController::deleteBook' => ['privates', '.service_locator.25DNpNm', 'get_ServiceLocator_25DNpNmService', true],
            'App\\Controller\\BookController::getAllBooks' => ['privates', '.service_locator.Pb8HGoX', 'get_ServiceLocator_Pb8HGoXService', true],
            'App\\Controller\\BookController::getBookDetail' => ['privates', '.service_locator.Z7WDD7F', 'get_ServiceLocator_Z7WDD7FService', true],
            'App\\Controller\\BookController::updateBook' => ['privates', '.service_locator.N3Uv_ho', 'get_ServiceLocator_N3UvHoService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'App\\Controller\\AuthorController:createAuthor' => ['privates', '.service_locator.vuDI7p1', 'get_ServiceLocator_VuDI7p1Service', true],
            'App\\Controller\\AuthorController:deleteAuthor' => ['privates', '.service_locator.u_qgCrO', 'get_ServiceLocator_UQgCrOService', true],
            'App\\Controller\\AuthorController:getAllAuthors' => ['privates', '.service_locator.fAyLWxL', 'get_ServiceLocator_FAyLWxLService', true],
            'App\\Controller\\AuthorController:getAuthorDetails' => ['privates', '.service_locator.yIFCjXg', 'get_ServiceLocator_YIFCjXgService', true],
            'App\\Controller\\AuthorController:updateAuthor' => ['privates', '.service_locator.zwFgvKV', 'get_ServiceLocator_ZwFgvKVService', true],
            'App\\Controller\\BookController:createBook' => ['privates', '.service_locator.ALWuwB6', 'get_ServiceLocator_ALWuwB6Service', true],
            'App\\Controller\\BookController:deleteBook' => ['privates', '.service_locator.25DNpNm', 'get_ServiceLocator_25DNpNmService', true],
            'App\\Controller\\BookController:getAllBooks' => ['privates', '.service_locator.Pb8HGoX', 'get_ServiceLocator_Pb8HGoXService', true],
            'App\\Controller\\BookController:getBookDetail' => ['privates', '.service_locator.Z7WDD7F', 'get_ServiceLocator_Z7WDD7FService', true],
            'App\\Controller\\BookController:updateBook' => ['privates', '.service_locator.N3Uv_ho', 'get_ServiceLocator_N3UvHoService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
        ], [
            'App\\Controller\\AuthorController::createAuthor' => '?',
            'App\\Controller\\AuthorController::deleteAuthor' => '?',
            'App\\Controller\\AuthorController::getAllAuthors' => '?',
            'App\\Controller\\AuthorController::getAuthorDetails' => '?',
            'App\\Controller\\AuthorController::updateAuthor' => '?',
            'App\\Controller\\BookController::createBook' => '?',
            'App\\Controller\\BookController::deleteBook' => '?',
            'App\\Controller\\BookController::getAllBooks' => '?',
            'App\\Controller\\BookController::getBookDetail' => '?',
            'App\\Controller\\BookController::updateBook' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'App\\Controller\\AuthorController:createAuthor' => '?',
            'App\\Controller\\AuthorController:deleteAuthor' => '?',
            'App\\Controller\\AuthorController:getAllAuthors' => '?',
            'App\\Controller\\AuthorController:getAuthorDetails' => '?',
            'App\\Controller\\AuthorController:updateAuthor' => '?',
            'App\\Controller\\BookController:createBook' => '?',
            'App\\Controller\\BookController:deleteBook' => '?',
            'App\\Controller\\BookController:getAllBooks' => '?',
            'App\\Controller\\BookController:getBookDetail' => '?',
            'App\\Controller\\BookController:updateBook' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
        ]);
    }
}
